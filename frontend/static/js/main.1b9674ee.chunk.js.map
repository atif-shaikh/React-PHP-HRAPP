{"version":3,"sources":["components/ErrorBoundary.jsx","context/initialStates/employeeInitialState.js","context/initialStates/departmentInitialState.js","context/reducers/employees.js","context/reducers/departments.js","services/useFetchAll.js","components/Spinner.jsx","components/Header.jsx","components/Footer.jsx","context/dataContext.js","services/useFetch.js","components/PageNotFound.jsx","components/Home.js","services/employeeService.js","constants/status.js","components/employee/Employee.js","components/employee/EmployeeList.js","services/departmentService.js","components/department/Department.js","components/department/DepartmentList.js","components/employee/ViewEmployee.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorBoundary","props","state","hasError","this","children","error","React","Component","employeeInitialState","employees","JSON","parse","localStorage","getItem","departmentInitialState","departments","type","payload","removeItem","newState","setItem","stringify","updatedEmployee","updatedEmployees","map","employee","empNo","filter","console","log","updatedDepartment","updatedDepartments","department","deptNo","areEqual","array1","array2","length","every","value","index","Spinner","className","Header","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","Footer","DataContext","createContext","DataProvider","useReducer","empState","empDispatch","deptState","deptDispatch","urls","prevUrls","useRef","useState","loading","setLoading","setError","useEffect","current","promises","url","fetch","process","then","response","ok","json","Promise","all","result","data","catch","e","finally","useFetchAll","contextValue","Provider","useDataContext","context","useContext","Error","baseUrl","PageNotFound","Dashboard","isMounted","setData","a","init","useFetch","reports","scope","deptWithHighSal","deptName","salary","deptWithEmpEarningMoreThan50","find","d","empCount","transactEmployee","requestMethod","method","headers","body","removeEmployee","STATUS","IDLE","SUBMITTING","SUBMITTED","COMPLETED","emptyEmployeeForm","firstName","lastName","email","phoneNumber","hireDate","birthDate","designation","Employee","id","useParams","status","setStatus","selectedEmployee","setEmployee","saveError","setSaveError","touched","setTouched","history","useHistory","errors","test","isNaN","getErrors","isValid","Object","keys","updateField","curEmp","handleChange","persist","target","handleDateChange","handleBlur","event","curr","preventDefault","resp","success","push","undefined","autoComplete","onSubmit","htmlFor","onBlur","onChange","role","selected","Date","parseISO","dateFormat","dept","disabled","aria-hidden","EmployeeList","deleteEmployee","onClick","transactDepartment","emptyDeptForm","Department","selectedDepartment","setDepartment","curDept","ViewEmployee","App","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b9674ee.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n","const employeeInitialState = {\n  employees: JSON.parse(localStorage.getItem(\"employees\")) ?? [],\n};\n\nexport default employeeInitialState;\n","const departmentInitialState = {\n  departments: JSON.parse(localStorage.getItem(\"departments\")) ?? [],\n};\n\nexport default departmentInitialState;\n","export default function employees(state, { type, payload }) {\n  switch (type) {\n    case \"empty\":\n      localStorage.removeItem(\"employees\");\n      return {\n        ...state,\n        employees: [],\n      };\n    case \"add\": {\n      const newState = {\n        ...state,\n        employees: [...state.employees, payload],\n      };\n      localStorage.setItem(\"employees\", JSON.stringify(newState.employees));\n      return newState;\n    }\n    case \"update\": {\n      const updatedEmployee = payload;\n\n      const updatedEmployees = state.employees.map((employee) => {\n        if (employee.empNo === updatedEmployee.empNo) {\n          return updatedEmployee;\n        }\n        return employee;\n      });\n      const newState = {\n        ...state,\n        employees: updatedEmployees,\n      };\n      localStorage.setItem(\"employees\", JSON.stringify(updatedEmployees));\n\n      return newState;\n    }\n    case \"delete\": {\n      const newState = {\n        ...state,\n        employees: state.employees.filter(\n          (employee) => employee.empNo !== payload\n        ),\n      };\n      localStorage.setItem(\"employees\", JSON.stringify(newState.employees));\n      return newState;\n    }\n    default:\n      return {\n        ...state,\n        employees: payload,\n      };\n  }\n}\n","export default function departments(state, { type, payload }) {\n  switch (type) {\n    case \"empty\":\n      console.log(\"inside Dispastch\");\n      localStorage.removeItem(\"departments\");\n      return {\n        ...state,\n        departments: [],\n      };\n    case \"add\": {\n      const newState = {\n        ...state,\n        departments: [...state.departments, payload],\n      };\n      localStorage.setItem(\"departments\", JSON.stringify(newState.departments));\n      return newState;\n    }\n\n    case \"update\": {\n      const updatedDepartment = payload;\n\n      const updatedDepartments = state.departments.map((department) => {\n        if (department.deptNo === updatedDepartment.deptNo) {\n          return updatedDepartment;\n        }\n        return department;\n      });\n      const newState = {\n        ...state,\n        departments: updatedDepartments,\n      };\n      localStorage.setItem(\"departments\", JSON.stringify(updatedDepartments));\n\n      return newState;\n    }\n\n    case \"delete\": {\n      const newState = {\n        ...state,\n        departments: state.departments.filter(\n          (department) => department.deptNo !== payload\n        ),\n      };\n      localStorage.setItem(\"departments\", JSON.stringify(newState.departments));\n      return newState;\n    }\n\n    default:\n      return {\n        ...state,\n        departments: payload,\n      };\n  }\n}\n","import { useState, useEffect, useRef } from \"react\";\n\nexport default function useFetchAll(urls, { empDispatch, deptDispatch }) {\n  const prevUrls = useRef([]);\n  //const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    console.log(\"length\" + urls.length);\n    console.log(areEqual(prevUrls.current, urls));\n    if (!urls.length || areEqual(prevUrls.current, urls)) {\n      setLoading(false);\n      return;\n    }\n    prevUrls.current = urls;\n    const promises = urls.map((url, index) =>\n      fetch(process.env.REACT_APP_API_BASE_URL + url).then((response) => {\n        if (response.ok) return response.json();\n        throw response;\n      })\n    );\n\n    Promise.all(promises)\n      .then((json) =>\n        json.map((result, index) => {\n          console.log(result);\n          if (urls[index] === \"employees\") {\n            localStorage.setItem(\"employees\", JSON.stringify(result.data));\n            return empDispatch({ payload: result.data });\n          } else {\n            localStorage.setItem(\"departments\", JSON.stringify(result.data));\n            return deptDispatch({ payload: result.data });\n          }\n        })\n      )\n      .catch((e) => {\n        console.error(e);\n        setError(e);\n      })\n      .finally(() => setLoading(false));\n    // eslint-disable-next-line\n  }, [urls]);\n\n  return { loading, error };\n}\n\nfunction areEqual(array1, array2) {\n  return (\n    array1.length === array2.length &&\n    array1.every((value, index) => localStorage.getItem(value))\n  );\n}\n","import React from \"react\";\n\nexport default function Spinner() {\n  return (\n    <div className=\"lds-container\">\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nexport default function Header() {\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            HRAPP\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/\">\n                  Home\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/employees\">\n                  Employees\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/employee/add\">\n                  Add Employee\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/departments\">\n                  Departments\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/department/add\">\n                  Add Department\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <nav className=\"navbar fixed-bottom navbar-expand-sm navbar-dark bg-dark\">\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          This site is created for demonstrative purposes only and does not\n          offer any real products or services. &copy; Atif\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import React, { createContext, useReducer, useContext } from \"react\";\nimport employeeInitialState from \"./initialStates/employeeInitialState\";\nimport departmentInitialState from \"./initialStates/departmentInitialState\";\nimport employees from \"./reducers/employees\";\nimport departments from \"./reducers/departments\";\nimport useFetchAll from \"../services/useFetchAll\";\nimport Spinner from \"../components/Spinner\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\n\nexport const DataContext = createContext(null);\n\nexport const DataProvider = (props) => {\n  const [empState, empDispatch] = useReducer(employees, employeeInitialState);\n  const [deptState, deptDispatch] = useReducer(\n    departments,\n    departmentInitialState\n  );\n\n  const { loading, error } = useFetchAll([\"employees\", \"departments\"], {\n    empDispatch,\n    deptDispatch,\n  });\n  const contextValue = {\n    empState,\n    empDispatch,\n    deptState,\n    deptDispatch,\n  };\n\n  if (error) throw error;\n\n  return (\n    <DataContext.Provider value={contextValue}>\n      <Header />\n      {loading ? <Spinner /> : props.children}\n      <Footer />\n    </DataContext.Provider>\n  );\n};\n\nexport function useDataContext() {\n  const context = useContext(DataContext);\n  if (!context)\n    throw new Error(\n      \"useCart must be used within a CartProvider. Wrap the parent component in <AppProvider> to fix this.\"\n    );\n  return context;\n}\n","import { useState, useEffect, useRef } from \"react\";\n\nconst baseUrl = process.env.REACT_APP_API_BASE_URL;\n\nexport default function useFetch(url) {\n  const isMounted = useRef(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    isMounted.current = true;\n    async function init() {\n      try {\n        const response = await fetch(baseUrl + url);\n        if (response.ok) {\n          const json = await response.json();\n          if (isMounted.current) setData(json);\n        } else {\n          throw response;\n        }\n      } catch (e) {\n        if (isMounted.current) setError(e);\n      } finally {\n        if (isMounted.current) setLoading(false);\n      }\n    }\n    init();\n    return () => (isMounted.current = false);\n  }, [url]);\n\n  return { data, error, loading };\n}\n","import React from \"react\";\n\nexport default function PageNotFound() {\n  return <h1>Page not found.</h1>;\n}\n","import React from \"react\";\nimport { useDataContext } from \"../context/dataContext\";\nimport useFetch from \"../services/useFetch\";\nimport PageNotFound from \"./PageNotFound\";\nimport Spinner from \"./Spinner\";\n\nexport default function Dashboard() {\n  const { deptState } = useDataContext();\n  const { departments } = { ...deptState };\n  console.log(departments);\n  const { data: reports, loading, error } = useFetch(\"reports\");\n  console.log(reports);\n  if (loading) return <Spinner />;\n  if (!reports) return <PageNotFound />;\n  if (error) throw error;\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"py-4\">\n          <h3>Department with Highest Salary</h3>\n          <table className=\"table\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Department Name</th>\n                <th scope=\"col\">Salary</th>\n              </tr>\n            </thead>\n            <tbody>\n              {reports.data.deptWithHighSal.map((value, index) => (\n                <tr key={index}>\n                  <td>{index + 1}</td>\n                  <td>{value.deptName}</td>\n                  <td>{value.salary ?? 0}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          <h3>Employee Earning more than 50k </h3>\n          <table className=\"table\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Department Name</th>\n                <th scope=\"col\">Employee Count</th>\n              </tr>\n            </thead>\n            <tbody>\n              {reports.data.deptWithEmpEarningMoreThan50.map((value, index) => (\n                <tr key={index}>\n                  <td>{index + 1}</td>\n                  <td>\n                    {\n                      departments.find((d) => d.deptNo === value.deptNo)\n                        .deptName\n                    }\n                  </td>\n                  <td>{value.empCount}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n}\n","const baseUrl = process.env.REACT_APP_API_BASE_URL;\n\nexport async function transactEmployee({ employee, requestMethod }) {\n  return await fetch(baseUrl + \"employee\", {\n    method: requestMethod,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(employee),\n  });\n}\n\nexport async function updateEmployee(employee) {\n  console.log(JSON.stringify(employee));\n  return await fetch(baseUrl + \"employee\", {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(employee),\n  });\n}\n\nexport async function removeEmployee(empNo) {\n  return await fetch(baseUrl + \"employee\", {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    body: \"empNo=\" + empNo,\n  });\n}\n","const STATUS = {\n  IDLE: \"IDLE\",\n  SUBMITTING: \"SUBMITTING\",\n  SUBMITTED: \"SUBMITTED\",\n  COMPLETED: \"COMPLETED\",\n};\n\nexport default STATUS;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useDataContext } from \"../../context/dataContext\";\nimport { transactEmployee } from \"../../services/employeeService\";\nimport DatePicker from \"react-datepicker\";\nimport { useParams } from \"react-router-dom\";\nimport PageNotFound from \"../PageNotFound\";\nimport STATUS from \"../../constants/status\";\nimport { parseISO } from \"date-fns\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../../styles/app.css\";\n\n// Declaring outside component to avoid recreation on each render\nconst emptyEmployeeForm = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  phoneNumber: \"\",\n  hireDate: null,\n  birthDate: null,\n  designation: \"\",\n  salary: \"\",\n  deptNo: \"\",\n};\n\nexport default function Employee(props) {\n  const { id } = useParams();\n  const { empDispatch, empState, deptState } = useDataContext();\n  const { employees, departments } = { ...empState, ...deptState };\n\n  const selectedEmployee = () => {\n    return employees.find((e) => e.empNo === id) ?? emptyEmployeeForm;\n  };\n\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [employee, setEmployee] = useState(selectedEmployee());\n  const [saveError, setSaveError] = useState(null);\n  const [touched, setTouched] = useState({});\n  const history = useHistory();\n  const errors = getErrors(employee);\n  const isValid = Object.keys(errors).length === 0;\n\n  function updateField(id, value) {\n    setEmployee((curEmp) => {\n      return {\n        ...curEmp,\n        [id]: value,\n      };\n    });\n  }\n\n  function handleChange(e) {\n    e.persist();\n    updateField(e.target.id, e.target.value);\n  }\n\n  function handleDateChange(id, value) {\n    //console.log(\"value\" + format(value, \"dd mm, yyyy HH:mm:ss\"));\n    updateField(id, value);\n  }\n\n  function handleBlur(event) {\n    event.persist();\n    setTouched((curr) => {\n      return {\n        ...curr,\n        [event.target.id]: true,\n      };\n    });\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setStatus(STATUS.SUBMITTING);\n    if (isValid) {\n      try {\n        const requestMethod = !id ? \"POST\" : \"PUT\";\n        const type = !id ? \"empty\" : \"update\";\n        console.log(employee);\n        console.log(requestMethod);\n        const resp = await transactEmployee({\n          employee: employee,\n          requestMethod: requestMethod,\n        });\n        const json = await resp.json();\n        if (resp.ok && json.success) {\n          setStatus(STATUS.COMPLETED);\n          //localStorage.removeItem(\"employees\");\n          empDispatch({ type: type, payload: employee });\n          history.push(\"/employees\");\n        }\n      } catch (e) {\n        setSaveError(e);\n      }\n    } else {\n      setStatus(STATUS.SUBMITTED);\n    }\n  }\n\n  function getErrors(employee) {\n    const result = {};\n    if (!employee.firstName) result.firstName = \"First Name is required\";\n    if (!employee.lastName) result.lastName = \"Last Name is required\";\n    if (!employee.email) result.email = \"Email is required\";\n    else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(employee.email)\n    ) {\n      result.email = \"Invalid email address\";\n    }\n\n    if (!employee.phoneNumber) result.phoneNumber = \"Phone Number is required\";\n    else if (isNaN(employee.phoneNumber) === true)\n      result.phoneNumber = \"Please enter number.\";\n    if (!employee.hireDate) result.hireDate = \"Hire Date is required\";\n    if (!employee.birthDate) result.birthDate = \"Birth Date is required\";\n    if (!employee.designation) result.designation = \"Designation is required\";\n    if (!employee.salary) result.salary = \"Salary is required\";\n    if (!employee.deptNo) result.deptNo = \"Department is required\";\n\n    return result;\n  }\n\n  // if (loading || empLoading) return <Spinner />;\n  if (!departments) return <PageNotFound />;\n  if (id && !employee) return <PageNotFound />;\n  // if (error) throw error;\n  // if (empError) throw empError;\n\n  if (saveError) throw saveError;\n  if (status === STATUS.COMPLETED) {\n    return <h1>Employee was created Successfully!</h1>;\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"mx-auto shadow p-5 box\">\n          <h2>{`${id === undefined ? \"Add\" : \"Update\"} an Employee`}</h2>\n\n          <form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input\n                  id=\"firstName\"\n                  type=\"text\"\n                  className={\n                    \"form-control \" +\n                    (touched.firstName || status === STATUS.SUBMITTED\n                      ? errors.firstName\n                        ? \"is-invalid\"\n                        : \"is-valid\"\n                      : \"\")\n                  }\n                  value={employee.firstName}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p role=\"alert\">\n                  {(touched.firstName || status === STATUS.SUBMITTED) &&\n                    errors.firstName}\n                </p>\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"lastName\" className=\"last-name\">\n                  Last Name\n                </label>\n                <input\n                  id=\"lastName\"\n                  type=\"text\"\n                  className={\n                    \"form-control \" +\n                    (touched.lastName || status === STATUS.SUBMITTED\n                      ? errors.lastName\n                        ? \"is-invalid\"\n                        : \"is-valid\"\n                      : \"\")\n                  }\n                  value={employee.lastName}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p role=\"alert\">\n                  {(touched.lastName || status === STATUS.SUBMITTED) &&\n                    errors.lastName}\n                </p>\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"email\" className=\"email\">\n                  Email\n                </label>\n                <input\n                  id=\"email\"\n                  type=\"text\"\n                  className={\n                    \"form-control \" +\n                    (touched.email || status === STATUS.SUBMITTED\n                      ? errors.email\n                        ? \"is-invalid\"\n                        : \"is-valid\"\n                      : \"\")\n                  }\n                  value={employee.email}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p role=\"alert\">\n                  {(touched.email || status === STATUS.SUBMITTED) &&\n                    errors.email}\n                </p>\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"phoneNumber\" className=\"phone-number\">\n                  Phone Number\n                </label>\n                <input\n                  id=\"phoneNumber\"\n                  type=\"text\"\n                  className={\n                    \"form-control \" +\n                    (touched.phoneNumber || status === STATUS.SUBMITTED\n                      ? errors.phoneNumber\n                        ? \"is-invalid\"\n                        : \"is-valid\"\n                      : \"\")\n                  }\n                  value={employee.phoneNumber}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p role=\"alert\">\n                  {(touched.phoneNumber || status === STATUS.SUBMITTED) &&\n                    errors.phoneNumber}\n                </p>\n              </div>\n\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"birthDate\" className=\"birth-date\">\n                  Birth Date\n                </label>\n                <DatePicker\n                  selected={\n                    employee.birthDate ? new Date(employee.birthDate) : null\n                  }\n                  value={parseISO(employee.birthDate)}\n                  className={\n                    \"form-control \" +\n                    (touched.birthDate || status === STATUS.SUBMITTED\n                      ? errors.birthDate\n                        ? \"is-invalid\"\n                        : \"is-valid\"\n                      : \"\")\n                  }\n                  id={\"birthDate\"}\n                  onBlur={handleBlur}\n                  onChange={(value) => handleDateChange(\"birthDate\", value)}\n                  dateFormat=\"MM/dd/yyyy\"\n                />\n                <p role=\"alert\">\n                  {(touched.birthDate || status === STATUS.SUBMITTED) &&\n                    errors.birthDate}\n                </p>\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"deptNo\" className=\"dept-no\">\n                  Department\n                </label>\n                <select\n                  id=\"deptNo\"\n                  className={\n                    \"form-control \" +\n                    (touched.deptNo || status === STATUS.SUBMITTED\n                      ? errors.deptNo\n                        ? \"is-invalid\"\n                        : \"is-valid\"\n                      : \"\")\n                  }\n                  value={employee.deptNo}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                >\n                  <option value=\"\"> Which Department? </option>\n                  {departments.map((dept) => (\n                    <option key={dept.deptNo} value={dept.deptNo}>\n                      {dept.deptName}\n                    </option>\n                  ))}\n                </select>\n                <p role=\"alert\">\n                  {(touched.deptNo || status === STATUS.SUBMITTED) &&\n                    errors.deptNo}\n                </p>\n              </div>\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"designation\" className=\"designation\">\n                  Designation\n                </label>\n                <input\n                  id=\"designation\"\n                  type=\"text\"\n                  className={\n                    \"form-control \" +\n                    (touched.designation || status === STATUS.SUBMITTED\n                      ? errors.designation\n                        ? \"is-invalid\"\n                        : \"is-valid\"\n                      : \"\")\n                  }\n                  value={employee.designation}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p role=\"alert\">\n                  {(touched.designation || status === STATUS.SUBMITTED) &&\n                    errors.designation}\n                </p>\n              </div>\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"hireDate\" className=\"hire-date\">\n                  Hire Date\n                </label>\n                <DatePicker\n                  selected={\n                    employee.hireDate ? new Date(employee.hireDate) : null\n                  }\n                  value={parseISO(employee.hireDate)}\n                  className={\n                    \"form-control \" +\n                    (touched.hireDate || status === STATUS.SUBMITTED\n                      ? errors.hireDate\n                        ? \"is-invalid\"\n                        : \"is-valid\"\n                      : \"\")\n                  }\n                  id=\"hireDate\"\n                  onBlur={handleBlur}\n                  onChange={(value) => handleDateChange(\"hireDate\", value)}\n                  dateFormat=\"MM/dd/yyyy\"\n                />\n                <br />\n                <p role=\"alert\">\n                  {(touched.hireDate || status === STATUS.SUBMITTED) &&\n                    errors.hireDate}\n                </p>\n              </div>\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"salary\" className=\"salary\">\n                  Salary\n                </label>\n                <input\n                  id=\"salary\"\n                  type=\"text\"\n                  className={\n                    \"form-control \" +\n                    (touched.salary || status === STATUS.SUBMITTED\n                      ? errors.salary\n                        ? \"is-invalid\"\n                        : \"is-valid\"\n                      : \"\")\n                  }\n                  value={employee.salary}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p role=\"alert\">\n                  {(touched.salary || status === STATUS.SUBMITTED) &&\n                    errors.salary}\n                </p>\n              </div>\n            </div>\n\n            <button\n              disabled={status === STATUS.SUBMITTING}\n              className=\"btn btn-primary\"\n            >\n              {status === STATUS.SUBMITTING && (\n                <span\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n              )}\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDataContext } from \"../../context/dataContext\";\nimport PageNotFound from \"../PageNotFound\";\nimport { Link } from \"react-router-dom\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport { removeEmployee } from \"../../services/employeeService\";\n\nexport default function EmployeeList() {\n  const { empDispatch, empState } = useDataContext();\n  console.log(empState);\n  const [loading, setLoading] = useState(false);\n  const { employees } = { ...empState };\n\n  const deleteEmployee = async (empNo) => {\n    setLoading(empNo);\n    try {\n      const resp = await removeEmployee(empNo);\n      const json = await resp.json();\n      console.log(json);\n      if (resp.ok && json.success) {\n        empDispatch({ type: \"delete\", payload: empNo });\n        //document.getElementById(empNo).style.setProperty(\"display\", \"block\");\n      }\n\n      throw resp;\n    } catch (e) {\n      setLoading(false);\n      //throw e;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!employees) return <PageNotFound />;\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"py-4\">\n          <h1>Manage Employees</h1>\n          <table className=\"table border shadow\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">First Name</th>\n                <th scope=\"col\">Last Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {employees.map((employee, empNo) => (\n                <tr key={empNo}>\n                  <th scope=\"row\">{empNo + 1}</th>\n                  <td>{employee.firstName}</td>\n                  <td>{employee.lastName}</td>\n                  <td>{employee.email}</td>\n                  <td>\n                    <Link\n                      disabled={loading}\n                      className=\"btn btn-outline-primary mr-2\"\n                      to={`/employee/view/${employee.empNo}`}\n                    >\n                      <Icon.Eye />\n                    </Link>\n\n                    <Link\n                      disabled={loading}\n                      className=\"btn btn-outline-warning mr-2\"\n                      to={`/employee/edit/${employee.empNo}`}\n                    >\n                      <Icon.PencilSquare />\n                    </Link>\n\n                    {!loading && (\n                      <Link\n                        className=\"btn btn-outline-danger\"\n                        onClick={() => deleteEmployee(employee.empNo)}\n                        to=\"#\"\n                      >\n                        <Icon.Trash />\n                      </Link>\n                    )}\n                    {loading === employee.empNo && (\n                      <div\n                        id={employee.empNo}\n                        className=\"spinner-border text-danger\"\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n}\n","const baseUrl = process.env.REACT_APP_API_BASE_URL;\n\nexport async function transactDepartment({ department, requestMethod }) {\n  return await fetch(baseUrl + \"department\", {\n    method: requestMethod,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(department),\n  });\n}\n\nexport async function updateDepartment(department) {\n  return await fetch(baseUrl + \"department\", {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(department),\n  });\n}\n\nexport async function removeDepartment(deptNo) {\n  return await fetch(baseUrl + \"department\", {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    body: \"deptNo=\" + deptNo,\n  });\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { transactDepartment } from \"../../services/departmentService\";\nimport { useDataContext } from \"../../context/dataContext\";\nimport { useParams } from \"react-router-dom\";\nimport PageNotFound from \"../PageNotFound\";\nimport STATUS from \"../../constants/status\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// Declaring outside component to avoid recreation on each render\nconst emptyDeptForm = {\n  deptName: \"\",\n};\n\nexport default function Department() {\n  const { id } = useParams();\n  const { deptDispatch, deptState } = useDataContext();\n  const { departments } = { ...deptState };\n  const history = useHistory();\n  const selectedDepartment = () => {\n    return departments.find((d) => d.deptNo === id) ?? emptyDeptForm;\n  };\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [department, setDepartment] = useState(selectedDepartment());\n  const [saveError, setSaveError] = useState(null);\n  const [touched, setTouched] = useState({});\n\n  const errors = getErrors(department);\n  const isValid = Object.keys(errors).length === 0;\n\n  function updateField(id, value) {\n    setDepartment((curDept) => {\n      return {\n        ...curDept,\n        [id]: value,\n      };\n    });\n  }\n\n  function handleChange(e) {\n    e.persist();\n    updateField(e.target.id, e.target.value);\n  }\n\n  function handleBlur(event) {\n    event.persist();\n    setTouched((curr) => {\n      return {\n        ...curr,\n        [event.target.id]: true,\n      };\n    });\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setStatus(STATUS.SUBMITTING);\n    if (isValid) {\n      try {\n        const requestMethod = id === undefined ? \"POST\" : \"PUT\";\n        const type = id === undefined ? \"empty\" : \"update\";\n        console.log(\"type\" + type);\n        console.log(requestMethod);\n        const resp = await transactDepartment({\n          department: department,\n          requestMethod: requestMethod,\n        });\n        const json = await resp.json();\n        if (resp.ok && json.success) {\n          setStatus(STATUS.COMPLETED);\n          deptDispatch({ type: type, payload: department });\n          history.push(\"/departments\");\n        }\n      } catch (e) {\n        setSaveError(e);\n      }\n    } else {\n      setStatus(STATUS.SUBMITTED);\n    }\n  }\n\n  function getErrors(employee) {\n    const result = {};\n    if (!department.deptName) result.deptName = \"Department Name is required\";\n    return result;\n  }\n\n  // if (loading) return <Spinner />;\n  if (!department) return <PageNotFound />;\n  // if (error) throw error;\n\n  if (saveError) throw saveError;\n  if (status === STATUS.COMPLETED) {\n    return <h1>Department was created Successfully!</h1>;\n  }\n  console.log(id);\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"mx-auto shadow p-5 box\">\n          <h2>{`${id === undefined ? \"Add\" : \"Update\"} Department`}</h2>\n\n          <form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"firstName\">Department Name</label>\n                <input\n                  id=\"deptName\"\n                  type=\"text\"\n                  className={\n                    \"form-control \" +\n                    (touched.deptName || status === STATUS.SUBMITTED\n                      ? errors.deptName\n                        ? \"is-invalid\"\n                        : \"is-valid\"\n                      : \"\")\n                  }\n                  value={department.deptName}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p role=\"alert\">\n                  {(touched.deptName || status === STATUS.SUBMITTED) &&\n                    errors.deptName}\n                </p>\n              </div>\n            </div>\n            <button\n              disabled={status === STATUS.SUBMITTING}\n              className=\"btn btn-primary\"\n            >\n              {status === STATUS.SUBMITTING && (\n                <span\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n              )}\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useDataContext } from \"../../context/dataContext\";\nimport PageNotFound from \"../PageNotFound\";\nimport { Link } from \"react-router-dom\";\nimport * as Icon from \"react-bootstrap-icons\";\n\nexport default function Dashboard() {\n  const { deptState } = useDataContext();\n  const { departments } = { ...deptState };\n  console.log(departments);\n\n  // const deleteEmployee = async (deptNo) => {\n  //   setLoading(true);\n  //   try {\n  //     const resp = await removeDepartment(deptNo);\n  //     const json = await resp.json();\n  //     console.log(json);\n  //     if (resp.ok && json.success) {\n  //       deptDispatch({ type: \"delete\", payload: deptNo });\n  //     }\n  //     throw resp;\n  //   } catch (e) {\n  //     setLoading(false);\n  //     //throw e;\n  //   }\n  // };\n\n  if (!departments) return <PageNotFound />;\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"py-3\">\n          <h1>Manage Employees</h1>\n          <table className=\"table border shadow\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Department Name</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {departments.map((department, deptNo) => (\n                <tr key={deptNo}>\n                  <th scope=\"row\">{deptNo + 1}</th>\n                  <td>{department.deptName}</td>\n\n                  <td>\n                    <Link\n                      className=\"btn btn-outline-warning mr-2\"\n                      to={`/department/edit/${department.deptNo}`}\n                    >\n                      <Icon.PencilSquare />\n                    </Link>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport { useDataContext } from \"../../context/dataContext\";\n\nconst ViewEmployee = () => {\n  const { id } = useParams();\n  const { empState, deptState } = useDataContext();\n  const { employees, departments } = { ...empState, ...deptState };\n  const employee = employees.find((e) => e.empNo === id);\n  const department = departments.find((d) => d.deptNo === employee.deptNo);\n  return (\n    <div className=\"container py-4\">\n      <h1 className=\"display-4\">Employee Id: {id}</h1>\n      <hr />\n      <ul className=\"list-group w-70\">\n        <li className=\"list-group-item\">First Name: {employee.firstName}</li>\n        <li className=\"list-group-item\">Last Name: {employee.lastName}</li>\n        <li className=\"list-group-item\">Email: {employee.email}</li>\n        <li className=\"list-group-item\">\n          Phone Number: {employee.phoneNumber}\n        </li>\n        <li className=\"list-group-item\">Birth Date: {employee.birthDate}</li>\n        <li className=\"list-group-item\">Hire Date: {employee.hireDate}</li>\n        <li className=\"list-group-item\">Department: {department.deptName}</li>\n        <li className=\"list-group-item\">Designation: {employee.designation}</li>\n        <li className=\"list-group-item\">Salary: {employee.salary}</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default ViewEmployee;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n// import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dashboard from \"./components/Home\";\nimport Employee from \"./components/employee/Employee\";\nimport EmployeeList from \"./components/employee/EmployeeList\";\nimport Department from \"./components/department/Department\";\nimport DepartmentList from \"./components/department/DepartmentList\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport ViewEmployee from \"./components/employee/ViewEmployee\";\n\nexport default function App() {\n  return (\n    <>\n      <div className=\"content\">\n        <main>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route\n              exact\n              path=\"/employees\"\n              render={(props) => <EmployeeList />}\n            />\n\n            <Route\n              exact\n              path=\"/employee/view/:id\"\n              render={(props) => <ViewEmployee />}\n            />\n\n            <Route\n              exact\n              path=\"/employee/add\"\n              render={(props) => <Employee />}\n            />\n            <Route\n              exact\n              path=\"/employee/edit/:id\"\n              render={(props) => <Employee />}\n            />\n\n            <Route\n              exact\n              path=\"/departments\"\n              render={(props) => <DepartmentList />}\n            />\n\n            <Route\n              exact\n              path=\"/department/add\"\n              render={(props) => <Department />}\n            />\n            <Route\n              exact\n              path=\"/department/edit/:id\"\n              render={(props) => <Department />}\n            />\n\n            <Route render={(props) => <PageNotFound />} />\n          </Switch>\n        </main>\n      </div>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { DataProvider } from \"./context/dataContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <Router>\n        <DataProvider>\n          <App />\n        </DataProvider>\n      </Router>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}